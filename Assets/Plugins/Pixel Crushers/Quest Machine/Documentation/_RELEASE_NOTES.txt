/*
Quest Machine Release Notes


Version 1.1.3
[January 29, 2019]
- Changed: When quest becomes successful|failed|abandoned, it sets any active nodes inactive.
- Updated assembly definition files to include Wrappers; renamed Common to PixelCrushers.
- Added: Quest Editor has now Arrange Nodes feature.
- Added: Quest Editor gear menu now shows quest list for easier quest switching.
- Added: Quest Editor gear menu can now move all loose text to a Text Table asset.
- Improved: QuestGiver.StartDialogueWithPlayer() finds GameObject with QuestJournal if multiple GameObjects are tagged Player.
- Improved: New quest counters' max value now initialized to 999; shows warning if min & max values are invalid.
- Improved: Editors now handle issues with outdated third party assemblies more gracefully.
- Improved: Can now assign requirement function assets to procedural quest generator action assets.
- Improved: Can now drag scene object into Instantiate Prefab Quest Action's Location field.
- Improved: QuestSubasset.quest and questNode properties are now public.
- Improved: Moved UI art assets used by Quest Machine prefab from Demo folder to Prefabs folder.
- Fixed: QuestCondition.SetTrue() now calls StopChecking().
- Fixed: MessageSystem bug when removing listeners while sending a message.
- Fixed: UIPanel timing bug when animations cause outgoing panel to overlap incoming panel.
- Fixed: When parent node becomes true, it only sets child nodes active if the quest is still active.
- Fixed: Can no longer parent a node to itself in Quest Editor.
- Save System: Calling LoadGame() w/Save System > Save Current Scene unticked now also updates internal saved game cache.
- Save System: ScenePortal.UsePortal() is now virtual.
- TextTable: Large text areas now word wrapped.
- Articy: Improvements to importing quests; nodes are auto-arranged; input pins are new imported as condition quest nodes; when creating templates, folders are created if they don't exist.
- Dialogue System: Can now show other text (e.g., "no quests") as conversation; added PlaySequenceQuestAction; bridge now forwards UpdateTracker messages to Quest Machine UIs.
- Opsive Character Controllers: Added support.
- ORK Framework: Updated for 2.21.0.
- uMMORPG: Updated for 1.155.
- uSurvival: Updated for 1.34.


Version 1.1.2
[December 16, 2018]
- CHANGED: FactionUrgencyFunction now returns positive affinity, not negative.
- Improved: Quest Editor now shows current quest state at runtime.
- Improved: Quest Editor window gracefully handles if editor resources files are missing.
- Added: Message System Logger component to log Message System activity only for specific GameObjects.
- articy:draft: Fixed import of Conditions.
- Dialogue System: Fixed Text Tables tags now usable in conversations.
- Dialogue System: Added DialogueSystemTextQuestContent to use markup tags in Quest Machine UIs.
- ORK Framework: Updated support for ORK 2.2.0.
- Rucksack: Added support.
- uSurvival: Item count condition can now be AtLeast or AtMost.


Version 1.1.1
[December 2, 2018]
- Fixed: UI animation monitor no longer reports error if animator is destroyed while waiting.
- uMMORPG: Updated for uMMORPG 1.148.


Version 1.1.0
[November 26, 2018]
- Added: Drive alignment urgency function.
- Improved: Generated quest actions can now send messages when active and completed.
- Fixed: Generated actions with effects that modeled the player's inventory domain weren't being chosen.
- Fixed bug generating actions that manipulate the generator's world model of the player's inventory.
- Fixed: Added EntityType Images section to quest database assets to specify images used in procedural quests.
- Fixed: QuestGeneratorEntity now disallows parallel processes for same entity to prevent duplicate quests.


Version 1.0.9:
[November 10, 2018]
- CHANGED: Quests now also activate counter listeners if state is WaitingToStart and has autostart or offer conditions.
- Improved: Added cooldown update frequency to Quest Giver to automatically update quest cooldowns & quest indicators.
- Improved: UI panel show/hide animations can now use Animation component as well as Animator.
- Fixed: Float conversion in .NET4 is now culture invariant.
- Fixed: Can no longer delete Start node.
- Compass Navigator Pro: Updated support package.
- Emerald AI: Updated EmeraldAISaver to properly play dead state.
- Invector character controllers: Added support.


Version 1.0.8:
[October 26, 2018]
- CHANGED: If using Physics2D in Unity 2018+, you must set scripting define symbol USE_PHYSICS2D.
- Added: QuestGeneratorEntity.StartDialogue methods that generate quest first if necessary.
- Added: Can now adjust drive values at runtime.
- Added: Quest Journal UI options to always expand groups, show details when hovering on quest name.
- Added: Quest Journal UI quest name can now show quest's icon.
- Added: EntityType Saver.
- Fixed: Removed null reference error an urgency function is unassigned.
- Fixed: Trigger Event and Collision Event components now handle >32 tags.
- Fixed: Quest Journal > UI Settings > Journal UI incorrectly accepted Dialogue UI type.
- Improved: Editor windows now gracefully ignore unreadable third party DLLs.
- Improved: Added Assign Unique Key menu item for Saver components.
- Improved: Animator Saver now saves parameter values.
- articy:draft: 
	- Articy condition nodes correctly link to true and false result nodes.
	- Links to the same node now actually link to the same node instead of duplicates of the node.
- Dialogue System for Unity: 
	- Fixed: Now only replaces tags if Process QM Tags is ticked.
	- Fixed: GiveQuest() Lua function finds Quest Journal even if ID is blank.
    - Fixed: Now shows regular Quest Machine UI if content has no Dialogue System Conversation content.
- ORK Framework: Fixed bug in GetQuestNodeStateStep.
- Inventory Engine: Added integration.
- uSurvival: Added integration.


Version 1.0.7:
- Improved: When quest giver has multiple quests, can now navigate back to quest list in same dialogue to view other quests.
- Added: Animator Quest Action.
- Added: Animator Saver.
- Fixed: Removed editor warning in EditorNote.cs.


Version 1.0.6:
- Fixed: Quest generators now comply with max quest limit even if multiple GenerateQuest() processes start simultaneously.
- Fixed: QuestMachine.instance wasn't being assigned properly.
- Fixed: MessageArgsEvent is now serializable in inspector.
- Save System: Added Binary Data Serializer.
- Save System: Added saveStarted, saveEnded, loadStarted, loadEnded events; SaveSystemEvents component.
- Save System: Fixed index error in DiskSavedGameDataStorer.
- Dialogue System: Now allows mix-and-match quests that use Dialogue System conversations and quests that don't.
- uMMORPG: Added conditions & actions.
- Added unitypackage containing optional Assembly Definition files.


Version 1.0.5:
- Improved: Now tracks times accepted on quester, not quest giver, to better support multiplayer.
- Added: QuestGiver & QuestListContainer.ResetToOriginalState() methods.
- Fixed: QuestStateSerializer now gracefully handles bad tag lists.
- articy:draft: Added support.
- Dialogue System for Unity: Updated for Dialogue System for Unity 2.x.
- Inventory Pro: Added support.
- uMMORPG: Added support.


Version 1.0.4:
- Improved: Save System now uses nonallocating (no GC) methods when loading.
- Fixed: Quests that listen for messages now accept any message parameter when parameter conditions is blank.
- Fixed: Button content appeared as icon content.
- Emerald AI: Added support.
- ORK Framework: Added support.


Version 1.0.3:
- Added: Compass Navigator Pro support.
- Fixed: Setting node from active to inactive to active didn't restart condition checking.
- Fixed: Node deletion didn't delete subassets. Opening quest in editor window will clean up unused subassets. Also added gear menu Debug > Delete Unused Subassets.


Version 1.0.2:
- Updated for Unity 2017.3 support.
- Changed: (PlayMaker) Actions that used FsmGameObject now use FsmOwnerDefault; will need to be reassigned.
- Changed: QuestGeneratorEntity Dialogue For Rewards format changed.
- Added: Step-by-step quest generator tutorial to manual.
- Added: QuestMachine.GetQuestCounter method.
- Added: QuestControl.SendToMessageSystem and Message Events format Message:Param:[Value] to pass values.
- Added: QuestGiver.StartDialogueWithPlayer; QuestGiver.StartDialogue now also finds player by tag if no player is specified.
- Added: QuestGiver.GiveQuestToQuester and GiveAllQuestsToQuester methods.
- Improved: Quest generator can now choose smaller target amounts than the total number of targets known.
- Fixed: Counter conditions now also check counter's value as soon as condition becomes active, not just when counter value changes.
- Fixed: Counter condition to check that value is less than goal wasn't registering true.
- Fixed: Spawner didn't stop spawning at max count.
- Fixed: Abandoned repeatable quests weren't able to be picked up again.
- Fixed: Tags for min & max counter values & reference window.
- Fixed: Alert UI and HUD no longer steal Unity UI focus.
- Fixed: UIPanel.OnVisible now gracefully handles missing EventSystem.
- Fixed: Loading a saved game no longer re-executes quests' main actions.
- Fixed: Journal no longer shows quests whose state is WaitingToStart.
- Fixed: NPCs no longer offer a generated quest if the player already has a generated quest for the same action and target.
- Fixed: Demo player is now tagged Player.
- Improved: SaveSystem can specify frames to wait before applying saved data.
- Improved: SaveSystem can encrypt saved games in PlayerPrefs.
- Fixed: TextTable editor now updates dropdown in Fields section properly when renaming a language.
- Added: Dialogue System support.


Version 1.0.1:
- Changed: Quest Giver optional UI content is now handled differently in inspector.
- Added: QuestListContainer events, QuestListEvents component.
- Fixed: Setup issues in Quick Start scene.
- Fixed: When quests become offerable & active, giver updates indicator UIs properly now.
- Fixed: Indicator UI prefab - swapped ? and !.
- Fixed: Using joystick, close button didn't autofocus in dialogue with no quests.
- Added: DMMap support.
- Added: Love/Hate support.
- Added: PlayMaker support.
- Added: Rewired support.


Version 1.0:
- Initial release.
*/
